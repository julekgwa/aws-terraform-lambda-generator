aws:
  region: us-east-2

project:
  directory: packages
  babelConfig: >
    {
      "presets": [
        [
          "@babel/preset-env",
          {
            "targets": {
              "node": "12",
              "esmodules": true
            }
          }
        ]
      ],
        "plugins": [
        [
          "@babel/plugin-transform-runtime",
          {
            "corejs": 3
          }
        ]
      ]
    }
  lambda: >
    export async function :lambda_name(event) {
      console.log('Loading function', event);
    }
  lambdaTest: >
    import { :lambda_name } from '../src/app'

    describe('Given handler', () => {
      test('should expose the lambda function handler', () => {
        expect(typeof :lambda_name).toBe('function')
      })
    })
  projectPackageJson: >
    {
      "name": ":package_name",
      "version": "1.0.0",
      "description": "",
      "main": "app.js",
      "scripts": {
        "start": "node app.js",
        "test": "jest"
      },
      "keywords": [],
      "author": "",
      "license": "ISC"
    }
  lambdaPackageJson: >
    {
      "name": ":package_name",
      "version": "1.0.0",
      "description": "",
      "main": "app.js",
      "scripts": {
        "start": "node app.js",
        "test": "jest"
      },
      "keywords": [],
      "author": "",
      "license": "ISC"
    }
terraform:
  iam: >
    resource "aws_iam_role" ":lambda_name_role" {
      name = ":lambda_name_role"

      assume_role_policy = jsonencode({
        "Version" : "2012-10-17",
        "Statement" : [
          {
            "Effect" : "Allow",
            "Principal" : {
              "Service" : "lambda.amazonaws.com"
            },
            "Action" : "sts:AssumeRole"
          }
        ]
      })

    }
  lambda: >
    resource "aws_lambda_function" ":lambda_name" {
      filename      = ":package_name.zip"
      function_name = ":package_name"
      role          = aws_iam_role.:lambda_name_role.arn
      handler       = "app.handler"

      source_code_hash = filebase64sha256(":package_name.zip")

      runtime = "nodejs12.x"
    }
  archive: >
    data "archive_file" ":lambda_name" {
      type = "zip"

      source_dir  = "${path.module}/:package_name"
      output_path = "${path.module}/:package_name.zip"
    }
  provider: >
    provider "aws" {
      region     = ":region"
      # access_key = ""
      # secret_key = ""
    }